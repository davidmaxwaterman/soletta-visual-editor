{
 "builtin": [
  {
   "author": "Intel Corporation",
   "category": "input/sw",
   "description": "Platform State",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "any",
     "description": "Triggers emission of current state.",
     "name": "TRIGGER",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "platform",
   "options_symbol": "sol_flow_node_type_platform_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "True if platform is ready.",
     "name": "READY",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_PLATFORM",
   "url": "http://solettaproject.org/doc/latest/node_types/platform.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "input/sw",
   "description": "Platform Service State",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "any",
     "description": "Triggers emission of current service state.",
     "name": "TRIGGER",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "any",
     "description": "Starts service when receives a signal",
     "name": "START",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "any",
     "description": "Stops service when receives a signal",
     "name": "STOP",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "platform-service",
   "options": {
    "members": [
     {
      "data_type": "string",
      "description": "the platform service name",
      "name": "service_name",
      "required": true
     }
    ],
    "required": true,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_platform_service_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "True if platform service is active.",
     "name": "ACTIVE",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_PLATFORM_SERVICE",
   "url": "http://solettaproject.org/doc/latest/node_types/platform_service.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "timer",
   "description": "Provides int packets on a timely manner (after each system clock hour changes)",
   "license": "BSD 3-Clause",
   "name": "wallclock/hour",
   "options_symbol": "sol_flow_node_type_wallclock_hour_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "An int range packet when wallclock hour ticks.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_WALLCLOCK_HOUR",
   "url": "http://solettaproject.org/doc/latest/node_types/wallclock_hour.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "timer",
   "description": "Provides int packets on a timely manner (after each system clock minute changes)",
   "license": "BSD 3-Clause",
   "name": "wallclock/minute",
   "options_symbol": "sol_flow_node_type_wallclock_minute_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "An int range packet when wallclock minute ticks.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_WALLCLOCK_MINUTE",
   "url": "http://solettaproject.org/doc/latest/node_types/wallclock_minute.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "timer",
   "description": "Provides int packets on a timely manner (after each system clock month day changes)",
   "license": "BSD 3-Clause",
   "name": "wallclock/monthday",
   "options_symbol": "sol_flow_node_type_wallclock_monthday_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "An int range packet when wallclock month day ticks.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_WALLCLOCK_MONTHDAY",
   "url": "http://solettaproject.org/doc/latest/node_types/wallclock_monthday.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "timer",
   "description": "Provides int packets on a timely manner (after each system clock second changes)",
   "license": "BSD 3-Clause",
   "name": "wallclock/second",
   "options_symbol": "sol_flow_node_type_wallclock_second_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "An int range packet when wallclock second ticks.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_WALLCLOCK_SECOND",
   "url": "http://solettaproject.org/doc/latest/node_types/wallclock_second.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "timer",
   "description": "Provides int packets on a timely manner (after each system clock week day changes)",
   "license": "BSD 3-Clause",
   "name": "wallclock/weekday",
   "options_symbol": "sol_flow_node_type_wallclock_weekday_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "An int range packet when wallclock week day ticks.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_WALLCLOCK_WEEKDAY",
   "url": "http://solettaproject.org/doc/latest/node_types/wallclock_weekday.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "arithmetic/float",
   "description": "Arithmetic addition operation with floats",
   "in_ports": [
    {
     "array_size": 32,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Thirty two ports for addition operation. Indexed from 0 to 31.",
     "name": "OPERAND",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/addition",
   "options_symbol": "sol_flow_node_type_float_addition_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Sum of values received on ports OPERAND[0] to OPERAND[31].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_ADDITION",
   "url": "http://solettaproject.org/doc/latest/node_types/arithmetic/drange/addition.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "arithmetic/float",
   "description": "Arithmetic division operation with floats",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Recieves dividend value.",
     "name": "DIVIDEND",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "float",
     "description": "Receives divisor value.",
     "name": "DIVISOR",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/division",
   "options_symbol": "sol_flow_node_type_float_division_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Quotient from the division of DIVIDEND by DIVISOR.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_DIVISION",
   "url": "http://solettaproject.org/doc/latest/node_types/arithmetic/drange/division.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "arithmetic/float",
   "description": "Arithmetic modulo operation with floats",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "First port of modulo operation.",
     "name": "DIVIDEND",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "float",
     "description": "Second port of modulo operation.",
     "name": "DIVISOR",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/modulo",
   "options_symbol": "sol_flow_node_type_float_modulo_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Remainder from the division of DIVIDEND by DIVISOR.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_MODULO",
   "url": "http://solettaproject.org/doc/latest/node_types/arithmetic/drange/modulo.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "arithmetic/float",
   "description": "Arithmetic multiplication operation with floats",
   "in_ports": [
    {
     "array_size": 32,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Thirty two ports for multiplication operation. Indexed from 0 to 31.",
     "name": "OPERAND",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/multiplication",
   "options_symbol": "sol_flow_node_type_float_multiplication_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Product of values received on ports OPERAND[0] to OPERAND[31].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_MULTIPLICATION",
   "url": "http://solettaproject.org/doc/latest/node_types/arithmetic/drange/multiplication.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "arithmetic/float",
   "description": "Arithmetic subtraction operation with floats",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Receives minuend value.",
     "name": "MINUEND",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "float",
     "description": "Receives subtrahend value.",
     "name": "SUBTRAHEND",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/subtraction",
   "options_symbol": "sol_flow_node_type_float_subtraction_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Difference of values received on ports MINUEND and SUBTRAHEND.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_SUBTRACTION",
   "url": "http://solettaproject.org/doc/latest/node_types/arithmetic/drange/subtraction.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "math/float",
   "description": "Calculates absolute value of a number.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Input number.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/abs",
   "options_symbol": "sol_flow_node_type_float_abs_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Number's absolute value.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_ABS",
   "url": "http://solettaproject.org/doc/latest/node_types/math/drange/abs.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "math/float",
   "description": "Constrain value to it's range",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Value to be constrained.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/constrain",
   "options": {
    "members": [
     {
      "data_type": "float",
      "default": {
       "max": 1023,
       "min": 0,
       "step": "DBL_MIN",
       "val": 0.0
      },
      "description": "Range values (min, max, step). Used only if use_input_range is disabled.",
      "name": "range",
      "required": false
     },
     {
      "data_type": "boolean",
      "default": true,
      "description": "Use min, max and step values from package instead of options min, max and step. It's useful if you need to convert from many different sources to the same range and all of them inform these values correctly in each package.",
      "name": "use_input_range",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_float_constrain_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Value constrained considering range",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_CONSTRAIN",
   "url": "http://solettaproject.org/doc/latest/node_types/math/drange/constrain.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "math/float",
   "description": "Calculates the natural logarithm of an input value.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Number to have natural logarithm calculated.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/ln",
   "options_symbol": "sol_flow_node_type_float_ln_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "The result of the natural logarithm operation.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_LN",
   "url": "http://solettaproject.org/doc/latest/node_types/math/drange/ln.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "math/float",
   "description": "Map values to different range",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Value to be converted.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/map",
   "options": {
    "members": [
     {
      "data_type": "float",
      "default": {
       "max": "DBL_MAX",
       "min": "-DBL_MAX",
       "step": "DBL_MIN",
       "val": 0.0
      },
      "description": "Input's range. Used only if use_input_range is disabled.",
      "name": "input_range",
      "required": false
     },
     {
      "data_type": "float",
      "description": "Output's range.",
      "name": "output_range",
      "required": true
     },
     {
      "data_type": "boolean",
      "default": true,
      "description": "Use min and max values from input package instead of option input_range. It's useful if you need to convert from many different sources to the same range and all of them inform these values correctly in each package.",
      "name": "use_input_range",
      "required": false
     }
    ],
    "required": true,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_float_map_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Value mapped considering input and output ranges",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_MAP",
   "url": "http://solettaproject.org/doc/latest/node_types/math/drange/map.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "math/float",
   "description": "Float Max",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Two ports for max operation. Indexed from 0 to 1.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/max",
   "options_symbol": "sol_flow_node_type_float_max_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Maximum value between IN[0] and IN[1].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_MAX",
   "url": "http://solettaproject.org/doc/latest/node_types/math/drange/max.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "math/float",
   "description": "Float Min",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Two ports for min operation. Indexed from 0 to 1.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/min",
   "options_symbol": "sol_flow_node_type_float_min_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Minimum value between IN[0] and IN[1].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_MIN",
   "url": "http://solettaproject.org/doc/latest/node_types/math/drange/min.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "math/float",
   "description": "Calculates the value of a number raised to a power.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Number to be raised.",
     "name": "BASE",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "float",
     "description": "The power to which the base is raised.",
     "name": "EXPONENT",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/pow",
   "options_symbol": "sol_flow_node_type_float_pow_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "The result of the exponentiation.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_POW",
   "url": "http://solettaproject.org/doc/latest/node_types/math/drange/pow.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "math/float",
   "description": "Calculates the square root of a number.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Input number.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/sqrt",
   "options_symbol": "sol_flow_node_type_float_sqrt_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Number's square root.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_SQRT",
   "url": "http://solettaproject.org/doc/latest/node_types/math/drange/sqrt.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "comparison/float",
   "description": "Check if an float is equal to other.",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Two ports for equal comparison operation. Indexed from 0 to 1.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/equal",
   "options_symbol": "sol_flow_node_type_float_equal_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "True if value received on port IN[0] is equal to value received on port IN[1].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_EQUAL",
   "url": "http://solettaproject.org/doc/latest/node_types/comparison/drange/equal.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "comparison/float",
   "description": "Check if an float is greater than or equal to other.",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Two ports for greater-or-equal comparison operation. Indexed from 0 to 1, and IN[0] being the left operand.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/greater-or-equal",
   "options_symbol": "sol_flow_node_type_float_greater_or_equal_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "True if value received on port IN[0] is greater than or equal to value received on port IN[1].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_GREATER_OR_EQUAL",
   "url": "http://solettaproject.org/doc/latest/node_types/comparison/drange/greater_or_equal.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "comparison/float",
   "description": "Check if an float is greater than other.",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Two ports for greater comparison operation. Indexed from 0 to 1, and IN[0] being the left operand.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/greater",
   "options_symbol": "sol_flow_node_type_float_greater_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "True if value received on port IN[0] is greater than value received on port IN[1].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_GREATER",
   "url": "http://solettaproject.org/doc/latest/node_types/comparison/drange/greater.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "comparison/float",
   "description": "Check if an float is less than or equal to other.",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Two ports for less-or-equal comparison operation. Indexed from 0 to 1, and IN[0] being the left operand.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/less-or-equal",
   "options_symbol": "sol_flow_node_type_float_less_or_equal_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "True if value received on port IN[0] is less than or equal to value received on port IN[1].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_LESS_OR_EQUAL",
   "url": "http://solettaproject.org/doc/latest/node_types/comparison/drange/less_or_equal.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "comparison/float",
   "description": "Check if an float is less than other.",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Two ports for less comparison operation. Indexed from 0 to 1, and IN[0] being the left operand.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/less",
   "options_symbol": "sol_flow_node_type_float_less_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "True if value received on port IN[0] is less than value received on port IN[1].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_LESS",
   "url": "http://solettaproject.org/doc/latest/node_types/comparison/drange/less.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "comparison/float",
   "description": "Check if an float is different from other.",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Two ports for not-equal comparison operation. Indexed from 0 to 1",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/not-equal",
   "options_symbol": "sol_flow_node_type_float_not_equal_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "True if value received on port IN[0] is different from value received on port IN[1].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_NOT_EQUAL",
   "url": "http://solettaproject.org/doc/latest/node_types/comparison/drange/not_equal.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "float/filter",
   "description": "Filter floats in range",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Data input port.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/filter",
   "options": {
    "members": [
     {
      "data_type": "float",
      "default": {
       "max": "DBL_MAX",
       "min": "-DBL_MAX",
       "step": "DBL_MIN",
       "val": "-DBL_MAX"
      },
      "description": "Minimum value (inclusive)",
      "name": "min",
      "required": false
     },
     {
      "data_type": "float",
      "default": {
       "max": "DBL_MAX",
       "min": "-DBL_MAX",
       "step": "DBL_MIN",
       "val": "DBL_MAX"
      },
      "description": "Maximum value (inclusive)",
      "name": "max",
      "required": false
     },
     {
      "data_type": "boolean",
      "default": false,
      "description": "if true, the packet irange will have it's min and max changed to the min and max of this node.",
      "name": "range_override",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_float_filter_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Outputs the same variable as the input if it's in range, nothing otherwise.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_FILTER",
   "url": "http://solettaproject.org/doc/latest/node_types/float/filter.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "wave-generator",
   "description": "A waves generator node that, after each input tick, generates the next value of its defined function on its output port. That function is defined by the various options members it's got, and has the form that goes from a minimum to an maximum value. When at those two extreme values, it may hold (for a pulse or more) on them, before resuming the increment/decrement steps. Thus, it is capable of producing trapezoidal/triangular/sawtooth/square waves. This node won't send any initial packets after port connections are made on its output port solely -- it needs an explicit 'pulse' on its input port to produce packets.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "any",
     "description": "Iterate to next generator's function value, outputting a packet.",
     "name": "TICK",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "wave-generator/trapezoidal",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 1
      },
      "description": "In how many function iterations (ticks) it should go from max to min values. The value must be greater than or equal to 1 (which means go from max to min instantly). With this value, the node will calculate the 'increasing step' of the function for you.",
      "name": "ticks_inc",
      "required": false
     },
     {
      "data_type": "float",
      "description": "The maximum value of the wave. This must be greater than min.",
      "name": "max",
      "required": true
     },
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 1
      },
      "description": "In how many function iterations (ticks) it should go from min to max values. The value must be greater than or equal to 1 (which means go from min to max instantly). With this value, the node will calculate the 'increasing step' of the function for you.",
      "name": "ticks_dec",
      "required": false
     },
     {
      "data_type": "float",
      "description": "The minimum value of the wave. This must be less than max.",
      "name": "min",
      "required": true
     },
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 0
      },
      "description": "The starting point of the wave, in ticks (must be greater or equal to 0). Zero means to start at min value, when no ticks have happened yet. Use this to shift the starting point and overwrite the default behavior.",
      "name": "tick_start",
      "required": false
     },
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 0
      },
      "description": "The number of (extra) input ticks the wave will hold its output at max value when it reaches it. The value must be greater than or equal to 0.",
      "name": "ticks_at_max",
      "required": false
     },
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 0
      },
      "description": "The number of (extra) input ticks the wave will hold its output at min value when it reaches it. The value must be greater than or equal to 0.",
      "name": "ticks_at_min",
      "required": false
     }
    ],
    "required": true,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_wave_generator_trapezoidal_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "The generator's current function value. This port won't send any initial packets after a connection is made. The node expects an explicit 'pulse' on its input port to produce packets.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_WAVE_GENERATOR_TRAPEZOIDAL",
   "url": "http://solettaproject.org/doc/latest/node_types/wave-generator/trapezoidal.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "wave-generator",
   "description": "A node that, after each input tick, generates the next value of the sine function on its output port. With fine tuning of it tick_start option, the cosine function can be achieved as well. A multiplier value can be supplied for the original [-1.0, 1.0] range, too. This node won't send any initial packets after port connections are made on its output port solely -- it needs an explicit 'pulse' on its input port to produce packets.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "any",
     "description": "Iterate to next generator's function value, outputting a packet.",
     "name": "TICK",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "wave-generator/sinusoidal",
   "options": {
    "members": [
     {
      "data_type": "int",
      "description": "In how many function iterations (ticks) it should go from the starting to the ending value of each function period (AKA function's resolution). The value must be greater than or equal to 1 (which means go from start to end in one step only), but note that waves very small values for this option tend to be useless.",
      "name": "ticks_per_period",
      "required": true
     },
     {
      "data_type": "float",
      "default": {
       "max": "DBL_MAX",
       "min": "-DBL_MAX",
       "step": "DBL_MIN",
       "val": 1.0
      },
      "description": "The sine wave's amplitude. This must be a positive number, which will multiply the values in the pristine [-1.0, 1.0] range.",
      "name": "amplitude",
      "required": false
     },
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 0
      },
      "description": "The starting point of the wave, in ticks (must be greater or equal to 0). Zero means to start at the beginning of the sive wave, when no ticks have happened yet. Use this to shift the starting point and overwrite the default behavior.",
      "name": "tick_start",
      "required": false
     }
    ],
    "required": true,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_wave_generator_sinusoidal_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "The generator's current function value. This port won't send any initial packets after a connection is made. The node expects an explicit 'pulse' on its input port to produce packets.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_WAVE_GENERATOR_SINUSOIDAL",
   "url": "http://solettaproject.org/doc/latest/node_types/wave-generator/sinusoidal.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "float/classify",
   "description": "Classifies input float according to one of float classifications: Not a Number, Infinite, Zero, Subnormal or Normal. It has OUT ports for each classification and sends input float to its classification OUT port.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Float to be classified.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "float/classify",
   "options_symbol": "sol_flow_node_type_float_classify_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "If input is NaN, it will go through this port.",
     "name": "NAN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "float",
     "description": "If input is Infinite (either positive or negative), it will go through this port.",
     "name": "INFINITE",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "float",
     "description": "If input is Zero, it will go through this port.",
     "name": "ZERO",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 3,
     "data_type": "float",
     "description": "If input is Subnormal, it will go through this port.",
     "name": "SUBNORMAL",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 4,
     "data_type": "float",
     "description": "If input is Normal, it will go through this port.",
     "name": "NORMAL",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FLOAT_CLASSIFY",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "random",
   "description": "Generate random booleans",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Seed value. Sequences are repeatable by using the same seed.",
     "name": "SEED",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "any",
     "description": "Receives a pulse to generate a new random boolean.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "random/boolean",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 1
      },
      "description": "Seed value. Sequences are repeatable by using the same seed.",
      "name": "seed",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_random_boolean_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Random boolean. Do NOT use it for anything else than test purposes.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_RANDOM_BOOLEAN",
   "url": "http://solettaproject.org/doc/latest/node_types/random/boolean.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "random",
   "description": "Generate random bytes",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Seed value. Sequences are repeatable by using the same seed.",
     "name": "SEED",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "any",
     "description": "Receives a pulse to generate a new random byte.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "random/byte",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 1
      },
      "description": "Seed value. Sequences are repeatable by using the same seed.",
      "name": "seed",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_random_byte_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Random byte. Do NOT use it for anything else than test purposes.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_RANDOM_BYTE",
   "url": "http://solettaproject.org/doc/latest/node_types/random/byte.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "random",
   "description": "Generate random float values",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Seed value. Sequences are repeatable by using the same seed.",
     "name": "SEED",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "any",
     "description": "Receives a pulse to generate a new random float number.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "random/float",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 1
      },
      "description": "Seed value. Sequences are repeatable by using the same seed.",
      "name": "seed",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_random_float_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Random float value from 0 to INT32_MAX. Do NOT use it for anything else than test purposes.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_RANDOM_FLOAT",
   "url": "http://solettaproject.org/doc/latest/node_types/random/float.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "random",
   "description": "Generate random int values",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Seed value. Sequences are repeatable by using the same seed.",
     "name": "SEED",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "any",
     "description": "Receives a pulse to generate a new random int number.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "random/int",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 1
      },
      "description": "Seed value. Sequences are repeatable by using the same seed.",
      "name": "seed",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_random_int_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Random int value from 0 to INT32_MAX. Do NOT use it for anything else than test purposes.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_RANDOM_INT",
   "url": "http://solettaproject.org/doc/latest/node_types/random/int.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "timer",
   "description": "Provides an empty packet on a timely manner",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "any",
     "description": "Resets the timer without triggering a packet in the current iteration.",
     "name": "RESET",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "int",
     "description": "Set the timer's tick interval in milliseconds.",
     "name": "INTERVAL",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "boolean",
     "description": "Enables or disables the timer, based on the value of the packet received. When stopped, the timer will cease to emit packets from the OUT port. When enabled again, it does not resume from the point where it was stopped.",
     "name": "ENABLED",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "timer",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 1000
      },
      "description": "Tick interval the timer will start with, in milliseconds.",
      "name": "interval",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_timer_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "empty",
     "description": "an empty packet when timer ticks.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_TIMER",
   "url": "http://solettaproject.org/doc/latest/node_types/timer.html"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/bitwise",
   "description": "Bitwise And",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Two ports for bitwise operation AND. Indexed from 0 to 1.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "byte/bitwise-and",
   "options_symbol": "sol_flow_node_type_byte_bitwise_and_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "The result of a bitwise AND between IN[0] and IN[1]",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_BYTE_BITWISE_AND",
   "url": "http://solettaproject.org/doc/latest/node_types/byte/bitwise_and.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/bitwise",
   "description": "Bitwise Not",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "First port of NOT operation.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "byte/bitwise-not",
   "options_symbol": "sol_flow_node_type_byte_bitwise_not_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Bitwise NOT of the value received in IN.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_BYTE_BITWISE_NOT",
   "url": "http://solettaproject.org/doc/latest/node_types/byte/bitwise_not.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/bitwise",
   "description": "Bitwise Or",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Two ports for bitwise operation OR. Indexed from 0 to 1.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "byte/bitwise-or",
   "options_symbol": "sol_flow_node_type_byte_bitwise_or_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "The result of a bitwise OR between IN[0] or IN[1]",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_BYTE_BITWISE_OR",
   "url": "http://solettaproject.org/doc/latest/node_types/byte/bitwise_or.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/bitwise",
   "description": "Bitwise Shift Left",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Value to be shifted",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "byte",
     "description": "Number of bits to shift the value in IN (must be less than 8)",
     "name": "SHIFT",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "byte/shift-left",
   "options_symbol": "sol_flow_node_type_byte_shift_left_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "The value received in IN, shifted SHIFT bits to the left.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_BYTE_SHIFT_LEFT",
   "url": "http://solettaproject.org/doc/latest/node_types/byte/shift_left.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/bitwise",
   "description": "Bitwise Shift Right",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Value to be shifted",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "byte",
     "description": "Number of bits to shift the value in IN (must be less than 8)",
     "name": "SHIFT",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "byte/shift-right",
   "options_symbol": "sol_flow_node_type_byte_shift_right_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "The value received in IN, shifted SHIFT bits to the right (No sign extension).",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_BYTE_SHIFT_RIGHT",
   "url": "http://solettaproject.org/doc/latest/node_types/byte/shift_right.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/bitwise",
   "description": "Bitwise Xor",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Two ports for bitwise operation XOR. Indexed from 0 to 1.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "byte/bitwise-xor",
   "options_symbol": "sol_flow_node_type_byte_bitwise_xor_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "The result of a bitwise XOR between IN[0] xor IN[1]",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_BYTE_BITWISE_XOR",
   "url": "http://solettaproject.org/doc/latest/node_types/byte/bitwise_xor.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "byte/filter",
   "description": "Filter bytes in range",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Data input port.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "byte/filter",
   "options": {
    "members": [
     {
      "data_type": "byte",
      "default": 0,
      "description": "Minimum value (inclusive)",
      "name": "min",
      "required": false
     },
     {
      "data_type": "byte",
      "default": 255,
      "description": "Maximum value (inclusive)",
      "name": "max",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_byte_filter_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Outputs the same variable as the input if it's in range, nothing otherwise.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_BYTE_FILTER",
   "url": "http://solettaproject.org/doc/latest/node_types/byte/filter.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "input/hw",
   "description": "Analog input reader. Default range is 0 - 4095 (12 bits) and can be changed by 'mask' options to support different chip manufacturers.",
   "license": "BSD 3-Clause",
   "name": "aio/reader",
   "options": {
    "members": [
     {
      "data_type": "int",
      "description": "Pin",
      "name": "pin",
      "required": true
     },
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 12
      },
      "description": "Valid bits mask. This mask is used to filter the valid bits from the data received from hardware (which is manufacturer dependent), therefore should not be used as a way to change the output range because the mask is applied to the least significant bits.",
      "name": "mask",
      "required": false
     },
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 1000
      },
      "description": "Polling time in milliseconds. This option will take no effect if hardware interruptions for GPIO is supported by the underlying system. Use it if you know that you don't have those interruptions available.",
      "name": "poll_timeout",
      "required": false
     }
    ],
    "required": true,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_aio_reader_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Measured value.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_AIO_READER",
   "url": "http://solettaproject.org/doc/latest/node_types/aio/reader.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "io/hw",
   "description": "PWM",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "True enables PWM, False disables it",
     "name": "ENABLED",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "int",
     "description": "PWM period, in ns",
     "name": "PERIOD",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "int",
     "description": "Duty cycle, in ns",
     "name": "DUTY_CYCLE",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "pwm",
   "options": {
    "members": [
     {
      "data_type": "int",
      "description": "PWM chip",
      "name": "chip",
      "required": true
     },
     {
      "data_type": "int",
      "description": "PWM pin channel",
      "name": "pin",
      "required": true
     },
     {
      "data_type": "boolean",
      "default": false,
      "description": "Initial enabled state",
      "name": "enabled",
      "required": false
     },
     {
      "data_type": "boolean",
      "default": false,
      "description": "PWM polarity (normal or inversed)",
      "name": "inversed_polarity",
      "required": false
     },
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 0
      },
      "description": "Initial period",
      "name": "period",
      "required": false
     },
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 0
      },
      "description": "Initial duty cycle",
      "name": "duty_cycle",
      "required": false
     }
    ],
    "required": true,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_pwm_options",
   "symbol": "SOL_FLOW_NODE_TYPE_PWM",
   "url": "http://solettaproject.org/doc/latest/components/pwm.html"
  },
  {
   "author": "Intel Corporation",
   "category": "hub",
   "description": "Forward blob packets.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "blob",
     "description": "Where to receive the blob packet to be forwarded.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "hub/blob",
   "options_symbol": "sol_flow_node_type_hub_blob_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "blob",
     "description": "Forwarded blob packets.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_HUB_BLOB",
   "url": "http://solettaproject.org/doc/latest/node_types/hub/blob.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "hub",
   "description": "Forward boolean packets.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Where to receive the boolean packet to be forwarded.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "hub/boolean",
   "options_symbol": "sol_flow_node_type_hub_boolean_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Forwarded boolean packets.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_HUB_BOOLEAN",
   "url": "http://solettaproject.org/doc/latest/node_types/hub/boolean.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "hub",
   "description": "Forward byte packets.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Where to receive the byte packet to be forwarded.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "hub/byte",
   "options_symbol": "sol_flow_node_type_hub_byte_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Forwarded byte packets.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_HUB_BYTE",
   "url": "http://solettaproject.org/doc/latest/node_types/hub/byte.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "hub",
   "description": "Forward empty packets.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "any",
     "description": "Where to receive the packet to be forwarded. Any packet can be received, but they'll be forwarded as empty packets.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "hub/empty",
   "options_symbol": "sol_flow_node_type_hub_empty_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "empty",
     "description": "Forwarded empty packets.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_HUB_EMPTY",
   "url": "http://solettaproject.org/doc/latest/node_types/hub/empty.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "hub",
   "description": "Forward error packets.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "error",
     "description": "Where to receive the error packet to be forwarded. They're forwared via 'ERROR' port.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "hub/error",
   "options_symbol": "sol_flow_node_type_hub_error_options",
   "symbol": "SOL_FLOW_NODE_TYPE_HUB_ERROR",
   "url": "http://solettaproject.org/doc/latest/node_types/hub/error.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "hub",
   "description": "Forward float packets.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Where to receive the float packet to be forwarded.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "hub/float",
   "options_symbol": "sol_flow_node_type_hub_float_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Forwarded float packets.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_HUB_FLOAT",
   "url": "http://solettaproject.org/doc/latest/node_types/hub/float.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "hub",
   "description": "Forward int packets.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Where to receive the int packet to be forwarded.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "hub/int",
   "options_symbol": "sol_flow_node_type_hub_int_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Forwarded int packets.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_HUB_INT",
   "url": "http://solettaproject.org/doc/latest/node_types/hub/int.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "hub",
   "description": "Forward rgb packets.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "rgb",
     "description": "Where to receive the rgb packet to be forwarded.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "hub/rgb",
   "options_symbol": "sol_flow_node_type_hub_rgb_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "rgb",
     "description": "Forwarded rgb packets.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_HUB_RGB",
   "url": "http://solettaproject.org/doc/latest/node_types/hub/rgb.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "hub",
   "description": "Forward direction vector packets.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "direction-vector",
     "description": "Where to receive the direction vector packet to be forwarded.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "hub/direction-vector",
   "options_symbol": "sol_flow_node_type_hub_direction_vector_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "direction-vector",
     "description": "Forwarded direction_vector packets.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_HUB_DIRECTION_VECTOR",
   "url": "http://solettaproject.org/doc/latest/node_types/hub/direction-vector.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "hub",
   "description": "Forward string packets.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "Where to receive the string packet to be forwarded.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "hub/string",
   "options_symbol": "sol_flow_node_type_hub_string_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "Forwarded string packets.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_HUB_STRING",
   "url": "http://solettaproject.org/doc/latest/node_types/hub/string.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "string",
   "description": "Compare two strings",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "Two strings to be compared. Indexed from 0 to 1.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "string/compare",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 0
      },
      "description": "Amount of bytes to be compared between strings. If zero, the whole strings will be compared.",
      "name": "bytes",
      "required": false
     },
     {
      "data_type": "boolean",
      "default": false,
      "description": "Ignore case when comparing strings.",
      "name": "ignore_case",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_string_compare_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "It returns an integer less than, equal to, or greater than zero if string received on IN[0] is found to be less than, to match, or be greater than string on IN[1].",
     "name": "OUT",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "boolean",
     "description": "TRUE if the string received on IN[0] is the same as the string on IN[1].",
     "name": "EQUAL",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_STRING_COMPARE",
   "url": "http://solettaproject.org/doc/latest/node_types/string/compare.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "string",
   "description": "Concatenate two strings",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "Two strings to be concatenated. Indexed from 0 to 1.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "string/concatenate",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 0
      },
      "description": "Amount of bytes to be copied from string received on IN[1]. If zero, the whole string will be concatenated to the string received on IN[0]",
      "name": "bytes",
      "required": false
     },
     {
      "data_type": "string",
      "default": null,
      "description": "Separator string to be used between the two concatenated strings. It's set to null by default (no separator).",
      "name": "separator",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_string_concatenate_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "String IN[0] concatenated to string IN[1].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_STRING_CONCATENATE",
   "url": "http://solettaproject.org/doc/latest/node_types/string/concatenate.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "string",
   "description": "Calculate the length of a string",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "String to be measured.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "string/length",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 0
      },
      "description": "Maximum length to be checked. If a string is greater than that, maxlen value will be sent. If zero, no limit is applied.",
      "name": "maxlen",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_string_length_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Send the string size, the number of bytes excluding terminating null byte. If maxlen is provided, it'll be at most this value.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_STRING_LENGTH",
   "url": "http://solettaproject.org/doc/latest/node_types/string/length.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "string",
   "description": "Split a string given a separator.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "String to be split.",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "string",
     "description": "String received on 'IN' port will be split using these delimiter chars.",
     "name": "SEPARATOR",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "int",
     "description": "A string can be split in many substrings. This value defines which substring should be sent. It must be non negative.",
     "name": "INDEX",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "string/split",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 0
      },
      "description": "A string can be split in many substrings. This value defines which substring should be sent. It must be non negative. It can be overriden by values received on 'INDEX' port.",
      "name": "index",
      "required": false
     },
     {
      "data_type": "string",
      "default": " ",
      "description": "String received on 'IN' port will be split using these delimiters chars. It can be overriden by values received on 'SEPARATOR' port.",
      "name": "separator",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_string_split_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Number of generated substrings.",
     "name": "LENGTH",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "string",
     "description": "Substring given a separator and an index.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_STRING_SPLIT",
   "url": "http://solettaproject.org/doc/latest/node_types/string/split.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives a boolean packet and convert to float.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Where to receive the boolean value to be converted.",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "float",
     "description": "DRange value of output when input is false.",
     "name": "FALSE_VALUE",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "float",
     "description": "DRange value of output when input is true.",
     "name": "TRUE_VALUE",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/boolean-to-float",
   "options": {
    "members": [
     {
      "data_type": "float",
      "default": {
       "max": "DBL_MAX",
       "min": "-DBL_MAX",
       "step": "DBL_MIN",
       "val": 0.0
      },
      "description": "DRange value of output when input is false.",
      "name": "false_value",
      "required": false
     },
     {
      "data_type": "float",
      "default": {
       "max": "DBL_MAX",
       "min": "-DBL_MAX",
       "step": "DBL_MIN",
       "val": 1.0
      },
      "description": "DRange value of output when input is true.",
      "name": "true_value",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_boolean_to_float_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Float with value set on options or via value_set ports.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_BOOLEAN_TO_FLOAT",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/boolean-to-drange.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives a boolean packet and convert to byte.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Where to receive the boolean value to be converted.",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "byte",
     "description": "Byte value of output when input is false.",
     "name": "FALSE_VALUE",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "byte",
     "description": "Byte value of output when input is true.",
     "name": "TRUE_VALUE",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/boolean-to-byte",
   "options": {
    "members": [
     {
      "data_type": "byte",
      "default": 0,
      "description": "Byte value of output when input is false.",
      "name": "false_value",
      "required": false
     },
     {
      "data_type": "byte",
      "default": 1,
      "description": "Byte value of output when input is true.",
      "name": "true_value",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_boolean_to_byte_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Byte with value set on options or via value_set ports.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_BOOLEAN_TO_BYTE",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/boolean-to-byte.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives a boolean packet and convert it to empty.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "If received boolean is true generates a pulse.",
     "name": "PULSE_IF_TRUE",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "boolean",
     "description": "If received boolean is false generates a pulse.",
     "name": "PULSE_IF_FALSE",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/boolean-to-empty",
   "options_symbol": "sol_flow_node_type_converter_boolean_to_empty_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "empty",
     "description": "Sends a pulse if boolean values received on each port match expected value.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_BOOLEAN_TO_EMPTY",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/boolean-to-empty.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives a boolean packet and convert to int.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Where to receive the boolean value to be converted.",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "int",
     "description": "IRange value of output when input is false.",
     "name": "FALSE_VALUE",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "int",
     "description": "IRange value of output when input is true.",
     "name": "TRUE_VALUE",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/boolean-to-int",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 0
      },
      "description": "IRange value of output when input is false.",
      "name": "false_value",
      "required": false
     },
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 1
      },
      "description": "IRange value of output when input is true.",
      "name": "true_value",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_boolean_to_int_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "IRange with value set on options or via value_set ports.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_BOOLEAN_TO_INT",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/boolean-to-irange.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives a boolean packet and convert to string.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Where to receive the boolean value to be converted.",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "string",
     "description": "String to be sent on output when input is false.",
     "name": "FALSE_VALUE",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "string",
     "description": "String to be sent on output when input is true.",
     "name": "TRUE_VALUE",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/boolean-to-string",
   "options": {
    "members": [
     {
      "data_type": "string",
      "default": "False",
      "description": "String sent when input is false.",
      "name": "false_value",
      "required": false
     },
     {
      "data_type": "string",
      "default": "True",
      "description": "String sent when input is true.",
      "name": "true_value",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_boolean_to_string_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "Send string defined by option 'true_value' if input is true or by 'false_value' if input is false.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_BOOLEAN_TO_STRING",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/boolean-to-string.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives byte packet and convert to a binary representaion in outputs.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Where to receive the byte value to be converted.",
     "name": "IN",
     "required": true
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/byte-to-bits",
   "options_symbol": "sol_flow_node_type_converter_byte_to_bits_options",
   "out_ports": [
    {
     "array_size": 8,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Byte turned to bits, index 0 is the least significant, 7 the most",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_BYTE_TO_BITS",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/byte-to-bits.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives a byte packet and convert to boolean.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Where to receive the byte value to be converted.",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "byte",
     "description": "Defines maximum value of input to set output as true.",
     "name": "TRUE_MAX",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "byte",
     "description": "Defines minimum value of input to set output as true.",
     "name": "TRUE_MIN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/byte-to-boolean",
   "options": {
    "members": [
     {
      "data_type": "byte",
      "default": 255,
      "description": "Defines maximum value of input to set output as true.",
      "name": "true_max",
      "required": false
     },
     {
      "data_type": "byte",
      "default": 1,
      "description": "Defines minimum value of input to set output as true.",
      "name": "true_min",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_byte_to_boolean_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Send true if input packet value is in range defined by min and max values or false otherwise.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_BYTE_TO_BOOLEAN",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/byte-to-boolean.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives a byte packet and convert to float.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Where to receive the byte value to be converted.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/byte-to-float",
   "options_symbol": "sol_flow_node_type_converter_byte_to_float_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Byte converted to float.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_BYTE_TO_FLOAT",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/byte-to-drange.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives a byte packet and convert it to empty.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Where to receive the byte value to be converted.",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "byte",
     "description": "Byte maximum range value that generates a pulse.",
     "name": "RANGE_MAX",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "byte",
     "description": "Byte minimum range value that generates a pulse.",
     "name": "RANGE_MIN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/byte-to-empty",
   "options": {
    "members": [
     {
      "data_type": "byte",
      "default": 255,
      "description": "Byte maximum value that generates a pulse.",
      "name": "range_max",
      "required": false
     },
     {
      "data_type": "byte",
      "default": 1,
      "description": "Byte minimum value that generates a pulse.",
      "name": "range_min",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_byte_to_empty_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "empty",
     "description": "Send an empty packet when input packet value in range defined by min and max values.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_BYTE_TO_EMPTY",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/byte-to-empty.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives a byte packet and convert to int.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Where to receive the byte value to be converted.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/byte-to-int",
   "options_symbol": "sol_flow_node_type_converter_byte_to_int_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Byte converted to int.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_BYTE_TO_INT",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/byte-to-irange.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives byte packets and convert to RGB.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Byte value for red component.",
     "name": "RED",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "byte",
     "description": "Byte value for green component.",
     "name": "GREEN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "byte",
     "description": "Byte value for blue component.",
     "name": "BLUE",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/byte-to-rgb",
   "options_symbol": "sol_flow_node_type_converter_byte_to_rgb_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "rgb",
     "description": "Bytes converted to RGB.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_BYTE_TO_RGB",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/byte-to-rgb.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives byte packets and convert to direction vector",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Byte value for x component.",
     "name": "X",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "byte",
     "description": "Byte value for y component.",
     "name": "Y",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "byte",
     "description": "Byte value for z component.",
     "name": "Z",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/byte-to-direction-vector",
   "options_symbol": "sol_flow_node_type_converter_byte_to_direction_vector_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "direction-vector",
     "description": "Bytes converted to direction vector.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_BYTE_TO_DIRECTION_VECTOR",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/byte-to-direction-vector.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives a byte packet and convert to string.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Where to receive the byte value to be converted.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/byte-to-string",
   "options_symbol": "sol_flow_node_type_converter_byte_to_string_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "Byte converted to string, prefixed with '0x', as 0x3e.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_BYTE_TO_STRING",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/byte-to-string.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives an float packet and convert to boolean.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Where to receive the float value to be converted.",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "float",
     "description": "Defines minimum and maximum values of input to set output as true.",
     "name": "TRUE_RANGE",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/float-to-boolean",
   "options": {
    "members": [
     {
      "data_type": "float",
      "default": {
       "max": 255,
       "min": 1,
       "step": "DBL_MIN",
       "val": 0.0
      },
      "description": "Defines minimum and maximum values of input to set output as true.",
      "name": "true_range",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_float_to_boolean_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Send true if input packet value is in range defined by min and max values or false otherwise.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_FLOAT_TO_BOOLEAN",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/drange-to-boolean.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives a float packet and convert to byte.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Where to receive the float value to be converted.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/float-to-byte",
   "options_symbol": "sol_flow_node_type_converter_float_to_byte_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Float converted to byte. If float was greater than 255 or less than 0 the converted value will be at these limits.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_FLOAT_TO_BYTE",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/drange-to-byte.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives a float packet and convert it to empty.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Where to receive the float value to be converted.",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "float",
     "description": "Float range that generates a pulse.",
     "name": "RANGE",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/float-to-empty",
   "options": {
    "members": [
     {
      "data_type": "float",
      "default": {
       "max": 255,
       "min": 1,
       "step": "DBL_MIN",
       "val": 0.0
      },
      "description": "Float range that generates a pulse.",
      "name": "range",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_float_to_empty_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "empty",
     "description": "Send an empty packet when input packet value is in range defined by min and max values.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_FLOAT_TO_EMPTY",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/drange-to-empty.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives a float packet and convert to int.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Where to receive the float value to be converted.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/float-to-int",
   "options_symbol": "sol_flow_node_type_converter_float_to_int_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Float converted to int. Value, min, max and step are converted.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_FLOAT_TO_INT",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/drange-to-irange.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives float packets and convert to RGB.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Float value for red component.",
     "name": "RED",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "float",
     "description": "Float value for green component.",
     "name": "GREEN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "float",
     "description": "Float value for blue component.",
     "name": "BLUE",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/float-to-rgb",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 255
      },
      "description": "Max value of red component. Minimum is set to zero.",
      "name": "red_max",
      "required": false
     },
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 255
      },
      "description": "Max value of green component. Minimum is set to zero.",
      "name": "green_max",
      "required": false
     },
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 255
      },
      "description": "Max value of blue component. Minimum is set to zero.",
      "name": "blue_max",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_float_to_rgb_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "rgb",
     "description": "Float values converted to RGB.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_FLOAT_TO_RGB",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/float-to-rgb.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives float packets and converts to direction vector ones.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Float value for x component.",
     "name": "X",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "float",
     "description": "Float value for y component.",
     "name": "Y",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "float",
     "description": "Float value for z component.",
     "name": "Z",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/float-to-direction-vector",
   "options": {
    "members": [
     {
      "data_type": "float",
      "default": {
       "max": "DBL_MAX",
       "min": "-DBL_MAX",
       "step": "DBL_MIN",
       "val": 0.0
      },
      "description": "Range of output packet.",
      "name": "out_range",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_float_to_direction_vector_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "direction-vector",
     "description": "Float values converted to direction vector.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_FLOAT_TO_DIRECTION_VECTOR",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/float-to-direction-vector.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives a float packet and convert to string.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Where to receive the float value to be converted.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/float-to-string",
   "options_symbol": "sol_flow_node_type_converter_float_to_string_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "Float converted to string with 6 digits after decimal-point character.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_FLOAT_TO_STRING",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/float-to-string.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives an empty packet and convert it to boolean.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "any",
     "description": "Where to receive the empty packet.",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "boolean",
     "description": "Boolean value of output when an empty packet is received.",
     "name": "OUTPUT_VALUE",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/empty-to-boolean",
   "options": {
    "members": [
     {
      "data_type": "boolean",
      "default": true,
      "description": "Boolean value of output when an empty packet is received.",
      "name": "output_value",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_empty_to_boolean_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Boolean defined by OUTPUT_VALUE port or output_value option.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_EMPTY_TO_BOOLEAN",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/empty-to-boolean.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives an empty packet and convert it to rgb.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "any",
     "description": "Where to receive the empty packet.",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "rgb",
     "description": "RGB value of output when an empty packet is received.",
     "name": "OUTPUT_VALUE",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/empty-to-rgb",
   "options": {
    "members": [
     {
      "data_type": "rgb",
      "default": {
       "blue": 255,
       "blue_max": 255,
       "green": 255,
       "green_max": 255,
       "red": 255,
       "red_max": 255
      },
      "description": "RGB value of output when an empty packet is received.",
      "name": "output_value",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_empty_to_rgb_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "rgb",
     "description": "RGB defined by OUTPUT_VALUE port or output_value option.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_EMPTY_TO_RGB",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/empty-to-rgb.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives an empty packet and convert it to byte.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "any",
     "description": "Where to receive the empty packet.",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "byte",
     "description": "Byte value of output when an empty packet is received.",
     "name": "OUTPUT_VALUE",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/empty-to-byte",
   "options": {
    "members": [
     {
      "data_type": "byte",
      "default": 1,
      "description": "Byte value of output when an empty packet is received.",
      "name": "output_value",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_empty_to_byte_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Byte defined by OUTPUT_VALUE port or output_value option.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_EMPTY_TO_BYTE",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/empty-to-byte.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives an empty packet and convert it to float.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "any",
     "description": "Where to receive the empty packet.",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "float",
     "description": "Float value of output when an empty packet is received.",
     "name": "OUTPUT_VALUE",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/empty-to-float",
   "options": {
    "members": [
     {
      "data_type": "float",
      "default": {
       "max": 1,
       "min": 1,
       "step": 1,
       "val": 1
      },
      "description": "Float value of output when an empty packet is received.",
      "name": "output_value",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_empty_to_float_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Float defined by OUTPUT_VALUE port or output_value option.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_EMPTY_TO_FLOAT",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/empty-to-drange.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives an empty packet and convert it to int.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "any",
     "description": "Where to receive the empty packet.",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "int",
     "description": "Int value of output when an empty packet is received.",
     "name": "OUTPUT_VALUE",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/empty-to-int",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": 1,
       "min": 1,
       "step": 1,
       "val": 1
      },
      "description": "Int value of output when an empty packet is received.",
      "name": "output_value",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_empty_to_int_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Int defined by OUTPUT_VALUE port or output_value option.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_EMPTY_TO_INT",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/empty-to-irange.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives an empty packet and convert it to string.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "any",
     "description": "Where to receive the empty packet.",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "string",
     "description": "Output string sent when an empty packet is received.",
     "name": "OUTPUT_VALUE",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/empty-to-string",
   "options": {
    "members": [
     {
      "data_type": "string",
      "default": "",
      "description": "Output string sent when an empty packet is received.",
      "name": "output_value",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_empty_to_string_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "String defined by OUTPUT_VALUE port or output_value option.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_EMPTY_TO_STRING",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/empty-to-string.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives an int packet and convert to boolean.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Where to receive the int value to be converted.",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "int",
     "description": "Defines minimum and maximum values of input to set output as true.",
     "name": "TRUE_RANGE",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/int-to-boolean",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": 255,
       "min": 1,
       "step": 1,
       "val": 0
      },
      "description": "Defines minimum and maximum values of input to set output as true.",
      "name": "true_range",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_int_to_boolean_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Send true if input packet value is in range defined by min and max values or false otherwise.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_INT_TO_BOOLEAN",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/irange-to-boolean.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives an int packet and convert to byte.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Where to receive the int value to be converted.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/int-to-byte",
   "options_symbol": "sol_flow_node_type_converter_int_to_byte_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Int converted to byte. If int was greater than 255 or less than 0 the converted value will be at these limits.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_INT_TO_BYTE",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/irange-to-byte.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives four bytes and composes them into an int. Any input port with no connections will be treated as a 0 value input.",
   "in_ports": [
    {
     "array_size": 4,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Array of bytes to turn into an int. Index 0 is the least significant, 3 is the most",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/int-compose",
   "options_symbol": "sol_flow_node_type_converter_int_compose_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Integer composed from the four input bytes",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_INT_COMPOSE",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/irange-compose.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives an int packet and decomposes it into four bytes. The received int will be treated as unsigned.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Where to receive the int value to be decomposed.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/int-decompose",
   "options_symbol": "sol_flow_node_type_converter_int_decompose_options",
   "out_ports": [
    {
     "array_size": 4,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Int turned to bytes, index 0 is the least significant, 3 the most",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_INT_DECOMPOSE",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/irange-decompose.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives an int packet and convert to float.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Where to receive the int value to be converted.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/int-to-float",
   "options_symbol": "sol_flow_node_type_converter_int_to_float_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Int converted to float. Value, min, max and step are converted.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_INT_TO_FLOAT",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/irange-to-drange.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives an int packet and convert it to empty.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Where to receive the int value to be converted.",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "int",
     "description": "Int range that generates a pulse.",
     "name": "RANGE",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/int-to-empty",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": 255,
       "min": 1,
       "step": 1,
       "val": 0
      },
      "description": "Int range that generates a pulse.",
      "name": "range",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_int_to_empty_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "empty",
     "description": "Send an empty packet when input packet value is in range defined by min and max values.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_INT_TO_EMPTY",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/irange-to-empty.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives int packets and convert to RGB.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Int value for red component.",
     "name": "RED",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "int",
     "description": "Int value for green component.",
     "name": "GREEN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "int",
     "description": "Int value for blue component.",
     "name": "BLUE",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/int-to-rgb",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 255
      },
      "description": "Max value of red component. Minimum is set to zero.",
      "name": "red_max",
      "required": false
     },
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 255
      },
      "description": "Max value of green component. Minimum is set to zero.",
      "name": "green_max",
      "required": false
     },
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 255
      },
      "description": "Max value of blue component. Minimum is set to zero.",
      "name": "blue_max",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_int_to_rgb_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "rgb",
     "description": "Int values converted to RGB.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_INT_TO_RGB",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/int-to-rgb.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives direction vector packets and converts to RGB ones.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "direction-vector",
     "description": "Input for direction vector packets to be converted.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/direction-vector-to-rgb",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 255
      },
      "description": "Max value of red component. Minimum is set to zero.",
      "name": "red_max",
      "required": false
     },
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 255
      },
      "description": "Max value of green component. Minimum is set to zero.",
      "name": "green_max",
      "required": false
     },
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 255
      },
      "description": "Max value of blue component. Minimum is set to zero.",
      "name": "blue_max",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_direction_vector_to_rgb_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "rgb",
     "description": "Direction vector values converted to RGB.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_DIRECTION_VECTOR_TO_RGB",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/int-to-rgb.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives int packets and converts a to direction vector one.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Int value for x component.",
     "name": "X",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "int",
     "description": "Int value for y component.",
     "name": "Y",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "int",
     "description": "Int value for z component.",
     "name": "Z",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/int-to-direction-vector",
   "options": {
    "members": [
     {
      "data_type": "float",
      "default": {
       "max": "DBL_MAX",
       "min": "-DBL_MAX",
       "step": "DBL_MIN",
       "val": 0.0
      },
      "description": "Range of output packet.",
      "name": "out_range",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_converter_int_to_direction_vector_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "direction-vector",
     "description": "Int values converted to direction vector.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_INT_TO_DIRECTION_VECTOR",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/int-to-direction-vector.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives an int packet and convert to string.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Where to receive the int value to be converted.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/int-to-string",
   "options_symbol": "sol_flow_node_type_converter_int_to_string_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "Int converted to string.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_INT_TO_STRING",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/irange-to-string.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives RGB packets and convert to bytes.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "rgb",
     "description": "RGB to be decomposed.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/rgb-to-byte",
   "options_symbol": "sol_flow_node_type_converter_rgb_to_byte_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Byte value for red component.",
     "name": "RED",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "byte",
     "description": "Byte value for green component.",
     "name": "GREEN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "byte",
     "description": "Byte value for blue component.",
     "name": "BLUE",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_RGB_TO_BYTE",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/rgb-to-byte.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives RGB packets and convert to float values.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "rgb",
     "description": "RGB to be decomposed.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/rgb-to-float",
   "options_symbol": "sol_flow_node_type_converter_rgb_to_float_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Float value for red component.",
     "name": "RED",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "float",
     "description": "Float value for green component.",
     "name": "GREEN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "float",
     "description": "Float value for blue component.",
     "name": "BLUE",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_RGB_TO_FLOAT",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/rgb-to-float.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives RGB packets and convert to int values.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "rgb",
     "description": "RGB to be decomposed.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/rgb-to-int",
   "options_symbol": "sol_flow_node_type_converter_rgb_to_int_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Int value for red component.",
     "name": "RED",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "int",
     "description": "Int value for green component.",
     "name": "GREEN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "int",
     "description": "Int value for blue component.",
     "name": "BLUE",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_RGB_TO_INT",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/rgb-to-int.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives RGB packets and convert to direction vector ones.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "rgb",
     "description": "RGB to be converted.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/rgb-to-direction-vector",
   "options_symbol": "sol_flow_node_type_converter_rgb_to_direction_vector_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "direction-vector",
     "description": "Dimensional vector packet",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_RGB_TO_DIRECTION_VECTOR",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/rgb-to-direction-vector.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives direction vector packets and converts to bytes.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "direction-vector",
     "description": "direction vector to be decomposed.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/direction-vector-to-byte",
   "options_symbol": "sol_flow_node_type_converter_direction_vector_to_byte_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Byte value for x component.",
     "name": "X",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "byte",
     "description": "Byte value for y component.",
     "name": "Y",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "byte",
     "description": "Byte value for z component.",
     "name": "Z",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_DIRECTION_VECTOR_TO_BYTE",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/direction-vector-to-byte.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives direction vector packets and converts to float values.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "direction-vector",
     "description": "direction vector to be decomposed.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/direction-vector-to-float",
   "options_symbol": "sol_flow_node_type_converter_direction_vector_to_float_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Float value for x component.",
     "name": "X",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "float",
     "description": "Float value for y component.",
     "name": "Y",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "float",
     "description": "Float value for z component.",
     "name": "Z",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_DIRECTION_VECTOR_TO_FLOAT",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/direction-vector-to-float.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives direction vector packets and converts to RGB.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "direction-vector",
     "description": "direction vector to be decomposed.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/direction-vector-to-int",
   "options_symbol": "sol_flow_node_type_converter_direction_vector_to_int_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Int value for x component.",
     "name": "X",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "int",
     "description": "Int value for y component.",
     "name": "Y",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "int",
     "description": "Int value for z component.",
     "name": "Z",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_DIRECTION_VECTOR_TO_INT",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/direction-vector-to-int.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives a string packet and convert it to boolean.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "Where to receive the string to be converted.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/string-to-boolean",
   "options_symbol": "sol_flow_node_type_converter_string_to_boolean_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Send true if received string is 'true' and false if 'false'. It ignores case. If string is different from those, no packet is sent.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_STRING_TO_BOOLEAN",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/string-to-boolean.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives a string packet and convert it to byte.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "Where to receive the string to be converted.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/string-to-byte",
   "options_symbol": "sol_flow_node_type_converter_string_to_byte_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Send converted value on success or do not send anything if a valid byte can't be parsed. It's expected to be on base 16 and may include '0x' prefix.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_STRING_TO_BYTE",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/string-to-byte.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives a string packet and convert it to float.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "Where to receive the string to be converted.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/string-to-float",
   "options_symbol": "sol_flow_node_type_converter_string_to_float_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Send converted value on success or do not send anything if a valid number can't be parsed.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_STRING_TO_FLOAT",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/string-to-float.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives a string packet and send an empty packet.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "Where to receive the string.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/string-to-empty",
   "options_symbol": "sol_flow_node_type_converter_string_to_empty_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "empty",
     "description": "Send a packet when any string is received.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_STRING_TO_EMPTY",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/string-to-empty.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives a string packet and convert it to int.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "Where to receive the string to be converted.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/string-to-int",
   "options_symbol": "sol_flow_node_type_converter_string_to_int_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Send converted value on success or do not send anything if a valid number can't be parsed.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_STRING_TO_INT",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/string-to-int.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Extracts error code and string from an error packet.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "error",
     "description": "Where to receive the error to be converted.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/error",
   "options_symbol": "sol_flow_node_type_converter_error_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Code extracted from error packet",
     "name": "CODE",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "string",
     "description": "Message extracted from error packet",
     "name": "MESSAGE",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_ERROR",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/error.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives boolean packets and convert these bits to a byte.",
   "in_ports": [
    {
     "array_size": 8,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Array of bits to turn into a byte. Index 0 is the least significant, 7 is the most",
     "name": "IN",
     "required": true
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/bits-to-byte",
   "options_symbol": "sol_flow_node_type_converter_bits_to_byte_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Send the byte converted from bits received.",
     "name": "OUT",
     "required": true
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_BITS_TO_BYTE",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/bits-to-byte.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "converter",
   "description": "Receives a string packet and convert to blob (sub-type SOL_BLOB_TYPE_DEFAULT).",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "Where to receive the string value to be converted.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "converter/string-to-blob",
   "options_symbol": "sol_flow_node_type_converter_string_to_blob_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "blob",
     "description": "Send blob with the contents of the string received in the port IN.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONVERTER_STRING_TO_BLOB",
   "url": "http://solettaproject.org/doc/latest/node_types/converter/string-to-blob.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "math/int",
   "description": "Int Max",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Two ports for max operation. Indexed from 0 to 1.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/max",
   "options_symbol": "sol_flow_node_type_int_max_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Maximum value between IN[0] and IN[1].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_MAX",
   "url": "http://solettaproject.org/doc/latest/node_types/math/irange/max.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "math/int",
   "description": "Int Min",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Two ports for min operation. Indexed from 0 to 1.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/min",
   "options_symbol": "sol_flow_node_type_int_min_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Minimum value between IN[0] and IN[1].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_MIN",
   "url": "http://solettaproject.org/doc/latest/node_types/math/irange/min.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "math/int",
   "description": "Calculates absolute value of a number.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Input number.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/abs",
   "options_symbol": "sol_flow_node_type_int_abs_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Number's absolute value.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_ABS",
   "url": "http://solettaproject.org/doc/latest/node_types/math/irange/abs.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/int",
   "description": "Increment or decrement it's internal value by 'step' whenever a packet is received and outputs the updated value. If the internal value is greater than 'max' after an increment, it's set to min and an empty packet is sent through OVERFLOW port as well, or if it's less than 'min' after a decrement, it's set to 'max' and an empty packet is sent through UNDERFLOW port.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "any",
     "description": "Increment operation.",
     "name": "INC",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "any",
     "description": "Decrement operation.",
     "name": "DEC",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "any",
     "description": "Reset accumulator to its initial state.",
     "name": "RESET",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/accumulator",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 0
      },
      "description": "The initial value, range and step to be used in operations. Only positive step values are allowed.",
      "name": "setup_value",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_int_accumulator_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Updated value after an input is processed.",
     "name": "OUT",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "empty",
     "description": "Sends an empty package whenever an overflow happens.",
     "name": "OVERFLOW",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "empty",
     "description": "Sends an empty package whenever an underflow happens.",
     "name": "UNDERFLOW",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_ACCUMULATOR",
   "url": "http://solettaproject.org/doc/latest/node_types/irange/accumulator.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "arithmetic/int",
   "description": "Arithmetic addition operation with ints",
   "in_ports": [
    {
     "array_size": 32,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Thirty two ports for addition operation. Indexed from 0 to 31.",
     "name": "OPERAND",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/addition",
   "options_symbol": "sol_flow_node_type_int_addition_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Sum of values received on ports OPERAND[0] to OPERAND[31].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_ADDITION",
   "url": "http://solettaproject.org/doc/latest/node_types/arithmetic/irange/addition.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "arithmetic/int",
   "description": "Arithmetic division operation with ints",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Receives dividend value.",
     "name": "DIVIDEND",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "int",
     "description": "Receives divisor value.",
     "name": "DIVISOR",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/division",
   "options_symbol": "sol_flow_node_type_int_division_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Quotient from the division of DIVIDEND by DIVISOR.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_DIVISION",
   "url": "http://solettaproject.org/doc/latest/node_types/arithmetic/irange/division.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "arithmetic/int",
   "description": "Arithmetic modulo operation with ints",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Receives dividend value.",
     "name": "DIVIDEND",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "int",
     "description": "Receives divisor value.",
     "name": "DIVISOR",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/modulo",
   "options_symbol": "sol_flow_node_type_int_modulo_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Remainder from the division of DIVIDEND by DIVISOR.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_MODULO",
   "url": "http://solettaproject.org/doc/latest/node_types/arithmetic/irange/modulo.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "arithmetic/int",
   "description": "Arithmetic multiplication operation with ints",
   "in_ports": [
    {
     "array_size": 32,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Thirty two ports for multiplication operation. Indexed from 0 to 31.",
     "name": "OPERAND",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/multiplication",
   "options_symbol": "sol_flow_node_type_int_multiplication_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Product of values received on ports OPERAND[0] and OPERAND[31].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_MULTIPLICATION",
   "url": "http://solettaproject.org/doc/latest/node_types/arithmetic/irange/multiplication.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "arithmetic/int",
   "description": "Arithmetic subtraction operation with ints",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Receives minuend value.",
     "name": "MINUEND",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "int",
     "description": "Receives subtrahend value.",
     "name": "SUBTRAHEND",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/subtraction",
   "options_symbol": "sol_flow_node_type_int_subtraction_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Difference of values received on ports OPERAND[0] to OPERAND[31].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_SUBTRACTION",
   "url": "http://solettaproject.org/doc/latest/node_types/arithmetic/irange/subtraction.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/bitwise",
   "description": "Bitwise And",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Two ports for AND operation. Indexed from 0 to 1.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/bitwise-and",
   "options_symbol": "sol_flow_node_type_int_bitwise_and_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "The result of a bitwise AND between IN[0] and IN[1]",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_BITWISE_AND",
   "url": "http://solettaproject.org/doc/latest/node_types/int/bitwise_and.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/bitwise",
   "description": "Bitwise Not",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "First port of NOT operation.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/bitwise-not",
   "options_symbol": "sol_flow_node_type_int_bitwise_not_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Bitwise NOT of the value received in IN.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_BITWISE_NOT",
   "url": "http://solettaproject.org/doc/latest/node_types/int/bitwise_not.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/bitwise",
   "description": "Bitwise Or",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Two ports for OR operation. Indexed from 0 to 1.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/bitwise-or",
   "options_symbol": "sol_flow_node_type_int_bitwise_or_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "The result of a bitwise OR between IN[0] and IN[1]",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_BITWISE_OR",
   "url": "http://solettaproject.org/doc/latest/node_types/int/bitwise_or.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/bitwise",
   "description": "Bitwise Shift Left",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Value to be shifted",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "int",
     "description": "Number of bits to shift the value in IN (must be less than 32)",
     "name": "SHIFT",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/shift-left",
   "options_symbol": "sol_flow_node_type_int_shift_left_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "The value received in IN, shifted SHIFT bits to the left.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_SHIFT_LEFT",
   "url": "http://solettaproject.org/doc/latest/node_types/int/shift_left.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/bitwise",
   "description": "Bitwise Shift Right",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Value to be shifted",
     "name": "IN",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "int",
     "description": "Number of bits to shift the value in IN (must be less than 32)",
     "name": "SHIFT",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/shift-right",
   "options_symbol": "sol_flow_node_type_int_shift_right_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "The value received in IN, shifted SHIFT bits to the right (No sign extension).",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_SHIFT_RIGHT",
   "url": "http://solettaproject.org/doc/latest/node_types/int/shift_right.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/bitwise",
   "description": "Bitwise Xor",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Two ports for XOR operation. Indexed from 0 to 1.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/bitwise-xor",
   "options_symbol": "sol_flow_node_type_int_bitwise_xor_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "The result of a bitwise XOR between IN[0] xor IN[1]",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_BITWISE_XOR",
   "url": "http://solettaproject.org/doc/latest/node_types/int/bitwise_xor.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/int",
   "description": "Apply desired computation when buffer fills or timeout happens.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Input port.",
     "name": "IN",
     "required": true
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "int",
     "description": "Receives an int packet to set the timeout time to be used.",
     "name": "TIMEOUT",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "any",
     "description": "Reset buffer and timer to its initial state.",
     "name": "RESET",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/buffer",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 4
      },
      "description": "Number of samples that the buffer should hold.",
      "name": "samples",
      "required": false
     },
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 0
      },
      "description": "Timeout time in milliseconds. Default is zero which means that timeout is disabled.",
      "name": "timeout",
      "required": false
     },
     {
      "data_type": "string",
      "default": "all_true",
      "description": "Operation to be applied in the buffer elements to compute the output.",
      "name": "operation",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_int_buffer_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Output port.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_BUFFER",
   "url": "http://solettaproject.org/doc/latest/node_types/irange/buffer.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "comparison/int",
   "description": "Check if an int is equal to other.",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Two ports for equal comparison operation. Indexed from 0 to 1.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/equal",
   "options_symbol": "sol_flow_node_type_int_equal_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "True if value received on port IN[0] is equal to value received on port IN[1].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_EQUAL",
   "url": "http://solettaproject.org/doc/latest/node_types/comparison/irange/equal.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "comparison/int",
   "description": "Check if an int is greater than other.",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Two ports for greater comparison operation. Indexed from 0 to 1, and IN[0] being the left operand.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/greater",
   "options_symbol": "sol_flow_node_type_int_greater_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "True if value received on port IN[0] is greater than value received on port IN[1].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_GREATER",
   "url": "http://solettaproject.org/doc/latest/node_types/comparison/irange/greater.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "comparison/int",
   "description": "Check if an int is greater than or equal to other.",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Two ports for greater-or-equal comparison operation. Indexed from 0 to 1, and IN[0] being the left operand.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/greater-or-equal",
   "options_symbol": "sol_flow_node_type_int_greater_or_equal_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "True if value received on port IN[0] is greater than or equal to value received on port IN[1].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_GREATER_OR_EQUAL",
   "url": "http://solettaproject.org/doc/latest/node_types/comparison/irange/greater-or-equal.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "comparison/int",
   "description": "Check if an int is less than other.",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Two ports for less comparison operation. Indexed from 0 to 1, and IN[0] being the left operand.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/less",
   "options_symbol": "sol_flow_node_type_int_less_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "True if value received on port IN[0] is less than value received on port IN[1].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_LESS",
   "url": "http://solettaproject.org/doc/latest/node_types/comparison/irange/less.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "comparison/int",
   "description": "Check if an int is less than or equal to other.",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Two ports for less-or-equal comparison operation. Indexed from 0 to 1, and IN[0] being the left operand.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/less-or-equal",
   "options_symbol": "sol_flow_node_type_int_less_or_equal_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "True if value received on port IN[0] is less than or equal to value received on port IN[1].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_LESS_OR_EQUAL",
   "url": "http://solettaproject.org/doc/latest/node_types/comparison/irange/less-or-equal.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "comparison/int",
   "description": "Check if an int is different from other.",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Two ports for not-equal comparison operation. Indexed from 0 to 1",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/not-equal",
   "options_symbol": "sol_flow_node_type_int_not_equal_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "True if value received on port IN[0] is different from value received on port IN[1].",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_NOT_EQUAL",
   "url": "http://solettaproject.org/doc/latest/node_types/comparison/irange/not-equal.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "math/int",
   "description": "Constrain value to it's range",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Value to be constrained.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/constrain",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": 1023,
       "min": 0,
       "step": 1,
       "val": 0
      },
      "description": "Range values (min, max, step). Used only if use_input_range is disabled.",
      "name": "range",
      "required": false
     },
     {
      "data_type": "boolean",
      "default": true,
      "description": "Use min, max and step values from package instead of options min, max and step. It's useful if you need to convert from many different sources to the same range and all of them inform these values correctly in each package.",
      "name": "use_input_range",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_int_constrain_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Value constrained considering range",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_CONSTRAIN",
   "url": "http://solettaproject.org/doc/latest/node_types/math/irange/constrain.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "int/filter",
   "description": "Filter ints in range",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Data input port.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/filter",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": "INT32_MIN"
      },
      "description": "Minimum value (inclusive)",
      "name": "min",
      "required": false
     },
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": "INT32_MAX"
      },
      "description": "Maximum value (inclusive)",
      "name": "max",
      "required": false
     },
     {
      "data_type": "boolean",
      "default": false,
      "description": "if true, the packet irange will have it's min and max changed to the min and max of this node.",
      "name": "range_override",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_int_filter_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Outputs the same variable as the input if it's in range, nothing otherwise.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_FILTER",
   "url": "http://solettaproject.org/doc/latest/node_types/int/filter.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/int",
   "description": "check if value is between a min and max range.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "value that will be checked if its in range or not.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/inrange",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": 255,
       "min": -255,
       "step": 1,
       "val": 0
      },
      "description": "maximum range value.",
      "name": "range",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_int_inrange_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "true if IN is in range",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_INRANGE",
   "url": "http://solettaproject.org/doc/latest/node_types/irange/inrange.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "math/int",
   "description": "Map values to different range",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Value to be converted.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "int/map",
   "options": {
    "members": [
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 0
      },
      "description": "Input's range. Used only if use_input_range is disabled.",
      "name": "input_range",
      "required": false
     },
     {
      "data_type": "int",
      "description": "Output's range.",
      "name": "output_range",
      "required": true
     },
     {
      "data_type": "boolean",
      "default": true,
      "description": "Use min and max values from input package instead of option input_range. It's useful if you need to convert from many different sources to the same range and all of them inform these values correctly in each package.",
      "name": "use_input_range",
      "required": false
     }
    ],
    "required": true,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_int_map_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Value mapped considering input and output ranges",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_INT_MAP",
   "url": "http://solettaproject.org/doc/latest/node_types/math/irange/map.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "output/sw",
   "description": "Console Output",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "any",
     "description": "Prints the packet to console",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "console",
   "options": {
    "members": [
     {
      "data_type": "string",
      "default": null,
      "description": "prefix messages with given string.",
      "name": "prefix",
      "required": false
     },
     {
      "data_type": "string",
      "default": null,
      "description": "suffix messages with given string.",
      "name": "suffix",
      "required": false
     },
     {
      "data_type": "boolean",
      "default": true,
      "description": "If true will output to stdout, otherwise stderr.",
      "name": "output_on_stdout",
      "required": false
     },
     {
      "data_type": "boolean",
      "default": true,
      "description": "If true will force flush after messages are printed.",
      "name": "flush",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_console_options",
   "symbol": "SOL_FLOW_NODE_TYPE_CONSOLE",
   "url": "http://solettaproject.org/doc/latest/node_types/console.html"
  },
  {
   "author": "Intel Corporation",
   "category": "input/hw",
   "description": "GPIO reader",
   "license": "BSD 3-Clause",
   "name": "gpio/reader",
   "options": {
    "members": [
     {
      "data_type": "int",
      "description": "GPIO pin",
      "name": "pin",
      "required": true
     },
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 1000
      },
      "description": "Polling time",
      "name": "poll_timeout",
      "required": false
     },
     {
      "data_type": "boolean",
      "default": false,
      "description": "Is active low",
      "name": "active_low",
      "required": false
     },
     {
      "data_type": "boolean",
      "default": false,
      "description": "Is edge rising",
      "name": "edge_rising",
      "required": false
     },
     {
      "data_type": "boolean",
      "default": false,
      "description": "Is edge falling",
      "name": "edge_falling",
      "required": false
     },
     {
      "data_type": "string",
      "default": "none",
      "description": "up for pull up, down for pull down, none for no pull",
      "name": "pull",
      "required": false
     }
    ],
    "required": true,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_gpio_reader_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "GPIO reader, port out",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_GPIO_READER",
   "url": "http://solettaproject.org/doc/latest/node_types/gpio/reader.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "output/hw",
   "description": "GPIO writer",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "GPIO writer, port in",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "gpio/writer",
   "options": {
    "members": [
     {
      "data_type": "int",
      "description": "GPIO pin",
      "name": "pin",
      "required": true
     },
     {
      "data_type": "boolean",
      "default": false,
      "description": "Is active low",
      "name": "active_low",
      "required": false
     }
    ],
    "required": true,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_gpio_writer_options",
   "symbol": "SOL_FLOW_NODE_TYPE_GPIO_WRITER",
   "url": "http://solettaproject.org/doc/latest/node_types/gpio/writer.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "filter-repeated",
   "description": "Filter repeated boolean packets.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Where to receive the boolean packet to be filtered. If the packet is equal to the previously received, it'll be dropped. Otherwise, it'll be forwarded.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "filter-repeated/boolean",
   "options_symbol": "sol_flow_node_type_filter_repeated_boolean_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Filtered boolean packets.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FILTER_REPEATED_BOOLEAN",
   "url": "http://solettaproject.org/doc/latest/node_types/filter-repeated/boolean.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "filter-repeated",
   "description": "Filter repeated byte packets.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Where to receive the byte packet to be filtered. If the packet is equal to the previously received, it'll be dropped. Otherwise, it'll be forwarded.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "filter-repeated/byte",
   "options_symbol": "sol_flow_node_type_filter_repeated_byte_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Filtered byte packets.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FILTER_REPEATED_BYTE",
   "url": "http://solettaproject.org/doc/latest/node_types/filter-repeated/byte.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "filter-repeated",
   "description": "Filter repeated error packets.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "error",
     "description": "Where to receive the error packet to be filtered. If the packet is equal to the previously received, it'll be dropped. Otherwise, it'll be forwarded. They're forwared via 'ERROR' port.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "filter-repeated/error",
   "options_symbol": "sol_flow_node_type_filter_repeated_error_options",
   "symbol": "SOL_FLOW_NODE_TYPE_FILTER_REPEATED_ERROR",
   "url": "http://solettaproject.org/doc/latest/node_types/filter-repeated/error.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "filter-repeated",
   "description": "Filter repeated float packets.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Where to receive the float packet to be filtered. If the packet is equal to the previously received, it'll be dropped. Otherwise, it'll be forwarded.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "filter-repeated/float",
   "options_symbol": "sol_flow_node_type_filter_repeated_float_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Filtered float packets.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FILTER_REPEATED_FLOAT",
   "url": "http://solettaproject.org/doc/latest/node_types/filter-repeated/float.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "filter-repeated",
   "description": "Filter repeated int packets.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Where to receive the int packet to be filtered. If the packet is equal to the previously received, it'll be dropped. Otherwise, it'll be forwarded.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "filter-repeated/int",
   "options_symbol": "sol_flow_node_type_filter_repeated_int_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Filtered int packets.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FILTER_REPEATED_INT",
   "url": "http://solettaproject.org/doc/latest/node_types/filter-repeated/int.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "filter-repeated",
   "description": "Filter repeated rgb packets.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "rgb",
     "description": "Where to receive the rgb packet to be filtered. If the packet is equal to the previously received, it'll be dropped. Otherwise, it'll be forwarded.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "filter-repeated/rgb",
   "options_symbol": "sol_flow_node_type_filter_repeated_rgb_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "rgb",
     "description": "Filtered rgb packets.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FILTER_REPEATED_RGB",
   "url": "http://solettaproject.org/doc/latest/node_types/filter-repeated/rgb.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "filter-repeated",
   "description": "Filter repeated direction vector packets.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "direction-vector",
     "description": "Where to receive the direction vector packet to be filtered. If the packet is equal to the previously received one, it'll be dropped. Otherwise, it'll be forwarded.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "filter-repeated/direction-vector",
   "options_symbol": "sol_flow_node_type_filter_repeated_direction_vector_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "direction-vector",
     "description": "Filtered direction vector packets.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FILTER_REPEATED_DIRECTION_VECTOR",
   "url": "http://solettaproject.org/doc/latest/node_types/filter-repeated/direction-vector.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "filter-repeated",
   "description": "Filter repeated string packets.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "Where to receive the string packet to be filtered. If the packet is equal to the previously received, it'll be dropped. Otherwise, it'll be forwarded.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "filter-repeated/string",
   "options_symbol": "sol_flow_node_type_filter_repeated_string_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "Filtered string packets.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_FILTER_REPEATED_STRING",
   "url": "http://solettaproject.org/doc/latest/node_types/filter-repeated/string.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "trigonometry",
   "description": "Calculates the cosine of an angle.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Angle in radians.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "trigonometry/cosine",
   "options_symbol": "sol_flow_node_type_trigonometry_cosine_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Cosine of angle.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_TRIGONOMETRY_COSINE",
   "url": "http://solettaproject.org/doc/latest/node_types/trigonometry/cosine.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "trigonometry",
   "description": "Convert degrees to radians.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Angle in degrees.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "trigonometry/degrees-to-radian",
   "options_symbol": "sol_flow_node_type_trigonometry_degrees_to_radian_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Angle in radian.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_TRIGONOMETRY_DEGREES_TO_RADIAN",
   "url": "http://solettaproject.org/doc/latest/node_types/trigonometry/degrees_to_radian.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "trigonometry",
   "description": "Convert radians to degrees.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Angle in radians.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "trigonometry/radian-to-degrees",
   "options_symbol": "sol_flow_node_type_trigonometry_radian_to_degrees_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Angle in degrees.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_TRIGONOMETRY_RADIAN_TO_DEGREES",
   "url": "http://solettaproject.org/doc/latest/node_types/trigonometry/radian_to_degrees.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "trigonometry",
   "description": "Calculates the sine of an angle.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Angle in radians.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "trigonometry/sine",
   "options_symbol": "sol_flow_node_type_trigonometry_sine_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Sine of angle.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_TRIGONOMETRY_SINE",
   "url": "http://solettaproject.org/doc/latest/node_types/trigonometry/sine.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "trigonometry",
   "description": "Calculates the tangent of an angle.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Angle in radians.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "trigonometry/tangent",
   "options_symbol": "sol_flow_node_type_trigonometry_tangent_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Tangent of angle.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_TRIGONOMETRY_TANGENT",
   "url": "http://solettaproject.org/doc/latest/node_types/trigonometry/tangent.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "color",
   "description": "Modifies a color changing its luminance.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Luminance to be applied in the color.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "color/luminance-rgb",
   "options": {
    "members": [
     {
      "data_type": "rgb",
      "description": "Initial color, with full luminance. Luminance will vary considering value received on IN port.",
      "name": "color",
      "required": true
     }
    ],
    "required": true,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_color_luminance_rgb_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "rgb",
     "description": "Color with new luminance applied. The value is a multiplication of each component on option and rate between luminance value and its range.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_COLOR_LUMINANCE_RGB",
   "url": "http://solettaproject.org/doc/latest/node_types/color/luminance-rgb.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "app",
   "description": "Send command line arguments.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Argument index.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "app/argc-argv",
   "options_symbol": "sol_flow_node_type_app_argc_argv_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "Argument at position defined by packet received on port 'IN'.",
     "name": "OUT",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "int",
     "description": "Number of arguments.",
     "name": "ARGC",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_APP_ARGC_ARGV",
   "url": "http://solettaproject.org/doc/latest/node_types/app/argc-argv.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "app",
   "description": "Send command line argument at specific position.",
   "license": "BSD 3-Clause",
   "name": "app/argv",
   "options": {
    "members": [
     {
      "data_type": "int",
      "description": "Argument position.",
      "name": "index",
      "required": true
     }
    ],
    "required": true,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_app_argv_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "Command line argument at position defined by option 'index'.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_APP_ARGV",
   "url": "http://solettaproject.org/doc/latest/node_types/app/argv.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "app",
   "description": "Quit the app.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "any",
     "description": "Just quit with success code (0).",
     "name": "QUIT",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "int",
     "description": "Quit with code received by packet.",
     "name": "CODE",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "error",
     "description": "Quit with error received by packet.",
     "name": "ERROR",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "app/quit",
   "options_symbol": "sol_flow_node_type_app_quit_options",
   "symbol": "SOL_FLOW_NODE_TYPE_APP_QUIT",
   "url": "http://solettaproject.org/doc/latest/node_types/app/quit.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "constant",
   "description": "Send an initial packet with a constant value set on options.",
   "license": "BSD 3-Clause",
   "name": "constant/boolean",
   "options": {
    "members": [
     {
      "data_type": "boolean",
      "description": "Value of constant.",
      "name": "value",
      "required": true
     }
    ],
    "required": true,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_constant_boolean_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Constant value, sent only once, when connected to a node.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONSTANT_BOOLEAN",
   "url": "http://solettaproject.org/doc/latest/node_types/constant/boolean.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "constant",
   "description": "Send an initial packet with a constant value set on options.",
   "license": "BSD 3-Clause",
   "name": "constant/byte",
   "options": {
    "members": [
     {
      "data_type": "byte",
      "description": "Value of constant.",
      "name": "value",
      "required": true
     }
    ],
    "required": true,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_constant_byte_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "byte",
     "description": "Constant value, sent only once, when connected to a node.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONSTANT_BYTE",
   "url": "http://solettaproject.org/doc/latest/node_types/constant/byte.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "constant",
   "description": "Send an initial packet with a constant value set on options.",
   "license": "BSD 3-Clause",
   "name": "constant/float",
   "options": {
    "members": [
     {
      "data_type": "float",
      "description": "Value of constant.",
      "name": "value",
      "required": true
     }
    ],
    "required": true,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_constant_float_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "float",
     "description": "Constant value, sent only once, when connected to a node.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONSTANT_FLOAT",
   "url": "http://solettaproject.org/doc/latest/node_types/constant/drange.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "constant",
   "description": "Send an initial empty packet.",
   "license": "BSD 3-Clause",
   "name": "constant/empty",
   "options_symbol": "sol_flow_node_type_constant_empty_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "empty",
     "description": "A single pulse sent when connected to a node.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONSTANT_EMPTY",
   "url": "http://solettaproject.org/doc/latest/node_types/constant/empty.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "constant",
   "description": "Send an initial packet with a constant value set on options.",
   "license": "BSD 3-Clause",
   "name": "constant/int",
   "options": {
    "members": [
     {
      "data_type": "int",
      "description": "Value of constant.",
      "name": "value",
      "required": true
     }
    ],
    "required": true,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_constant_int_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Constant value, sent only once, when connected to a node.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONSTANT_INT",
   "url": "http://solettaproject.org/doc/latest/node_types/constant/irange.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "constant",
   "description": "Send an initial packet with a constant value set on options.",
   "license": "BSD 3-Clause",
   "name": "constant/rgb",
   "options": {
    "members": [
     {
      "data_type": "rgb",
      "description": "Value of constant.",
      "name": "value",
      "required": true
     }
    ],
    "required": true,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_constant_rgb_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "rgb",
     "description": "Constant value, sent only once, when connected to a node.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONSTANT_RGB",
   "url": "http://solettaproject.org/doc/latest/node_types/constant/rgb.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "constant",
   "description": "Send an initial packet with a constant value set on options.",
   "license": "BSD 3-Clause",
   "name": "constant/direction-vector",
   "options": {
    "members": [
     {
      "data_type": "direction-vector",
      "description": "Value of constant.",
      "name": "value",
      "required": true
     }
    ],
    "required": true,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_constant_direction_vector_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "direction-vector",
     "description": "Constant value, sent only once, when connected to a node.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONSTANT_DIRECTION_VECTOR",
   "url": "http://solettaproject.org/doc/latest/node_types/constant/direction-vector.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "constant",
   "description": "Send an initial packet with a string set on options.",
   "license": "BSD 3-Clause",
   "name": "constant/string",
   "options": {
    "members": [
     {
      "data_type": "string",
      "description": "String to be sent when node is connected.",
      "name": "value",
      "required": true
     }
    ],
    "required": true,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_constant_string_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "string",
     "description": "Constant value, sent only once, when connected to a node.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_CONSTANT_STRING",
   "url": "http://solettaproject.org/doc/latest/node_types/constant/string.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/boolean",
   "description": "Boolean And",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Two ports for logical operation AND. Indexed from 0 to 1.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "boolean/and",
   "options_symbol": "sol_flow_node_type_boolean_and_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "True if both IN[0] and IN[1] are true.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_BOOLEAN_AND",
   "url": "http://solettaproject.org/doc/latest/node_types/boolean/and.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/boolean",
   "description": "Receives boolean packets from different connections and returns the number of them in TRUE and FALSE state",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Input port",
     "name": "IN",
     "required": true
    }
   ],
   "license": "BSD 3-Clause",
   "name": "boolean/counter",
   "options_symbol": "sol_flow_node_type_boolean_counter_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "int",
     "description": "Number of connections in TRUE state",
     "name": "TRUE",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "int",
     "description": "Number of connections in FALSE state",
     "name": "FALSE",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_BOOLEAN_COUNTER",
   "url": "http://solettaproject.org/doc/latest/node_types/boolean/counter.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/boolean",
   "description": "Receives a boolean packet and forwards it through the TRUE or FALSE ports depending on its value.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "First port of AND operation.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "boolean/filter",
   "options_symbol": "sol_flow_node_type_boolean_filter_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Emits a packet with value TRUE when it recives a TRUE value on the IN port",
     "name": "TRUE",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "boolean",
     "description": "Emits a packet with value FALSE when it recives a FALSE value on the IN port",
     "name": "FALSE",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_BOOLEAN_FILTER",
   "url": "http://solettaproject.org/doc/latest/node_types/boolean/filter.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/boolean",
   "description": "Boolean Not",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Where to receive the input of NOT operation.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "boolean/not",
   "options_symbol": "sol_flow_node_type_boolean_not_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "True if 'IN' is false, false otherwise.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_BOOLEAN_NOT",
   "url": "http://solettaproject.org/doc/latest/node_types/boolean/not.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/boolean",
   "description": "Boolean Or",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Two ports for logical operation OR. Indexed from 0 to 1.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "boolean/or",
   "options_symbol": "sol_flow_node_type_boolean_or_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "True if either IN[0] or IN[1] is true.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_BOOLEAN_OR",
   "url": "http://solettaproject.org/doc/latest/node_types/boolean/or.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/boolean",
   "description": "Receives an empty packet and toggle the boolean output.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "any",
     "description": "Where to receive the toggle trigger",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "boolean/toggle",
   "options": {
    "members": [
     {
      "data_type": "boolean",
      "default": false,
      "description": "the initial state, defaults to false.",
      "name": "initial_state",
      "required": false
     }
    ],
    "required": false,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_boolean_toggle_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Current toggle state.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_BOOLEAN_TOGGLE",
   "url": "http://solettaproject.org/doc/latest/node_types/boolean/toggle.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/boolean",
   "description": "Boolean XOR - exclusive or",
   "in_ports": [
    {
     "array_size": 2,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Two ports for logical operation XOR. Indexed from 0 to 1.",
     "name": "IN",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "boolean/xor",
   "options_symbol": "sol_flow_node_type_boolean_xor_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "True whenever both inputs differ (one is true, the other is false). False if IN[0] and IN[1] are the same.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_BOOLEAN_XOR",
   "url": "http://solettaproject.org/doc/latest/node_types/boolean/xor.html",
   "version": "1"
  },
  {
   "author": "Intel Corporation",
   "category": "logical/boolean",
   "description": "Apply desired computation when buffer fills or timeout happens.",
   "in_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Input port.",
     "name": "IN",
     "required": true
    },
    {
     "array_size": 0,
     "base_port_idx": 1,
     "data_type": "int",
     "description": "Receives an int packet to set the timeout time to be used.",
     "name": "TIMEOUT",
     "required": false
    },
    {
     "array_size": 0,
     "base_port_idx": 2,
     "data_type": "any",
     "description": "Reset buffer and timer to its initial state.",
     "name": "RESET",
     "required": false
    }
   ],
   "license": "BSD 3-Clause",
   "name": "boolean/buffer",
   "options": {
    "members": [
     {
      "data_type": "int",
      "description": "Number of samples that the buffer should hold.",
      "name": "samples",
      "required": true
     },
     {
      "data_type": "int",
      "default": {
       "max": "INT32_MAX",
       "min": "INT32_MIN",
       "step": 1,
       "val": 0
      },
      "description": "Timeout time in milliseconds. Default is zero which means that timeout is disabled.",
      "name": "timeout",
      "required": false
     },
     {
      "data_type": "string",
      "default": "all_true",
      "description": "Operation to be applied in the buffer elements to compute the output.",
      "name": "operation",
      "required": false
     }
    ],
    "required": true,
    "version": 1
   },
   "options_symbol": "sol_flow_node_type_boolean_buffer_options",
   "out_ports": [
    {
     "array_size": 0,
     "base_port_idx": 0,
     "data_type": "boolean",
     "description": "Output port.",
     "name": "OUT",
     "required": false
    }
   ],
   "symbol": "SOL_FLOW_NODE_TYPE_BOOLEAN_BUFFER",
   "url": "http://solettaproject.org/doc/latest/node_types/boolean/buffer.html",
   "version": "1"
  }
 ]
}
